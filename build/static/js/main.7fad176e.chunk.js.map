{"version":3,"sources":["Components/Header.js","Components/TripItem.js","Components/TripBoard.js","Components/TripSearch.js","App.js","reportWebVitals.js","Components/Journey.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Container","Brand","href","src","width","Component","TripItem","output","trip","this","props","dateOutput","Date","dateTime","toLocaleString","type","origin","Row","Col","md","TripBoard","trips","length","map","board","id","detailsId","TripSearch","state","input","locations","handleInputChange","bind","e","setState","target","value","getLocationsFromApi","fetch","then","response","json","data","location","name","handleLocationSubmit","suggestions","NavLink","onClick","submitLocation","InputGroup","className","Text","FormControl","placeholder","onChange","Nav","Button","App","loaded","switchBoard","getData","yourDate","request","toLocaleDateString","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fad176e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport {Navbar,Nav,Container,NavDropdown} from 'react-bootstrap'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n  <Container>\r\n    <Navbar.Brand href=\"#home\">\r\n        <img src=\"/logo.png\" width=\"42\"></img>\r\n    </Navbar.Brand>\r\n   \r\n  </Container>\r\n</Navbar>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nexport default class TripItem extends Component {\r\n   \r\n   \r\n    \r\n    render() {\r\n        let trip = this.props.trip;\r\n\r\n        let output;\r\n        let date = new Date(trip.dateTime);\r\n        let dateOutput = date.toLocaleString(\"de-DE\");\r\n        if(this.props.type === \"arrivals\") {\r\n            output = <div>\r\n                <strong>From: {trip.origin}</strong>\r\n                <p>Should Arrive At: {dateOutput}</p>\r\n            </div>\r\n        }\r\n        if(this.props.type === \"departures\") {\r\n           output = <div>\r\n            <strong>To: {trip.origin}</strong>\r\n            <p>Departure At: {dateOutput}</p>\r\n        </div>\r\n        }\r\n        return (\r\n            <Row>\r\n               \r\n                <Col md=\"12\">\r\n                  {output}\r\n                \r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container,Row } from 'react-bootstrap'\r\nimport TripItem from './TripItem'\r\n\r\nexport default class TripBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n       \r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n        let output = <div></div>;\r\n\r\n            if(this.props.trips.length > 0) {\r\n                output = this.props.trips.map((trip)=> {return <TripItem type={this.props.board} id={trip.detailsId} trip={trip}></TripItem>});\r\n            }\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    {output}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport { Container,Row,Col, NavLink} from 'react-bootstrap';\r\nimport {FormControl,InputGroup } from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nexport default class TripSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            input:\"\",\r\n            locations:[]\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    \r\n    handleInputChange(e) {\r\n        this.setState({input:e.target.value});\r\n\r\n        if(e.target.value.length > 2) {\r\n            //alert(\"search\");\r\n            this.getLocationsFromApi(e.target.value);\r\n        }\r\n    }\r\n\r\n    getLocationsFromApi(input) {\r\n        fetch('https://api.deutschebahn.com/freeplan/v1/location/'+input)\r\n        .then((response)=>response.json()).then((data)=>this.setState({locations:data}));\r\n    }\r\n\r\n    submitLocation(location) {\r\n        this.setState({input:location.name,locations:[]});\r\n        this.props.handleLocationSubmit(location);\r\n    }\r\n\r\n    render() {\r\n        var suggestions = <div></div>;\r\n        if(this.state.locations.length > 0){\r\n            suggestions = this.state.locations.map((location)=>{\r\n            return <NavLink id={location.id} onClick={()=>this.submitLocation(location)}>{location.name}</NavLink>\r\n        });\r\n    }\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md=\"8\">\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Text id=\"basic-addon1\">Station/Stop</InputGroup.Text>\r\n                                    <FormControl\r\n                                    placeholder=\"Hamburg Hbf\"\r\n                                    aria-label=\"Station/Stop\"\r\n                                    aria-describedby=\"basic-addon1\"\r\n                                    onChange={this.handleInputChange}\r\n                                    value={this.state.input}\r\n                                    />\r\n                            </InputGroup>\r\n\r\n                            <Nav className=\"flex-column\">\r\n                               {suggestions}\r\n                            </Nav>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Button>Search</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\nimport Header from './Components/Header'\nimport TripBoard from './Components/TripBoard'\nimport TripSearch from './Components/TripSearch'\nimport { Container,Col, Row,Button } from 'react-bootstrap'\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      board:\"arrivals\",trips:[],loaded:false,\n       location:{id:1,name:\"\"}\n    }\n    this.handleLocationSubmit=this.handleLocationSubmit.bind(this);\n    this.switchBoard=this.switchBoard.bind(this);\n  }\n  \n\n  handleLocationSubmit(location) {\n    this.setState({location:location});\n    this.getData();\n  }\n\n  switchBoard(board) {\n    this.setState({board:board});\n    this.getData();\n  }\n\n  getData() {\n    const yourDate = new Date()\n    var request = 'https://api.deutschebahn.com/freeplan/v1/arrivalBoard/'\n    +this.state.location.id+'?date='+yourDate.toLocaleDateString();\n\n    if(this.state.board === \"departures\") {\n        request = 'https://api.deutschebahn.com/freeplan/v1/departureBoard/'\n        +this.state.location.id+'?date='+yourDate.toLocaleDateString();\n    }\n    \n    console.log(request);\n    fetch(request)\n    .then((response)=>response.json())\n    .then((data)=>this.setState({trips:data,loaded:true}));\n\n    \n  }\n\n\n  render() {\n\n    var heading;\n    if(this.state.location.name) {\n      heading =  <h2>{this.state.location.name}</h2>\n    }\n   \n    return (\n      <Fragment>\n      <Header></Header>\n      <TripSearch handleLocationSubmit={this.handleLocationSubmit}></TripSearch>\n      <Container>\n        <Row className=\"boardSelector\">\n          <Col md=\"6\">\n            <Button className=\"full-width-button\" onClick={()=>this.switchBoard(\"arrivals\")}>Arrivals</Button>\n          </Col>\n          <Col md=\"6\">\n           <Button className=\"full-width-button\" onClick={()=>this.switchBoard(\"departures\")}>Departures</Button>\n           </Col>\n        </Row>\n        <Row>\n          <TripBoard trips={this.state.trips} board={this.state.board} location={this.state.location}></TripBoard>\n        </Row>\n      </Container>\n                   \n    </Fragment>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react'\r\n\r\nexport default class Journey extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             data:[]\r\n        }\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n    \r\n\r\n    getData() {\r\n        fetch('https://api.deutschebahn.com/freeplan/v1/journeyDetails/'+this.props.id)\r\n        .then(response=>{return response.json()})\r\n        .then((data)=>{this.setState({data:data})});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    render() {\r\n\r\n        var output = this.state.data.map((item)=>{return <div>{item.stopName}</div>});\r\n\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Journey from './Components/Journey';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}